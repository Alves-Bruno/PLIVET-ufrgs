"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UniFor = void 0;
const UniStatement_1 = require("./UniStatement");
const UniExpr_1 = require("./UniExpr");
class UniFor extends UniStatement_1.UniStatement {
    constructor(init, cond, step, statement) {
        super();
        if (init === undefined && cond === undefined && step === undefined && statement === undefined) {
            this.init = null;
            this.cond = null;
            this.step = null;
            this.statement = null;
        }
        else if (init === undefined || cond === undefined || step === undefined || statement === undefined) {
            throw new Error('invalid arguments');
        }
        else {
            this.init = init;
            this.cond = cond;
            this.step = step;
            this.statement = statement;
        }
        this.fields.set('init', UniExpr_1.UniExpr);
        this.fields.set('cond', UniExpr_1.UniExpr);
        this.fields.set('step', UniExpr_1.UniExpr);
        this.fields.set('statement', UniStatement_1.UniStatement);
    }
    toString() {
        return 'For(' + ')';
    }
    equals(obj) {
        if (obj == null || !(obj instanceof UniFor))
            return false;
        const that = obj;
        return super.equals(that)
            && (this.init == null ? that.init == null : this.init.equals(that.init))
            && (this.cond == null ? that.cond == null : this.cond.equals(that.cond))
            && (this.step == null ? that.step == null : this.step.equals(that.step))
            && (this.statement == null ? that.statement == null : this.statement.equals(that.statement));
    }
    merge(that) {
        super.merge(that);
        if (that.init != null) {
            this.init = that.init;
        }
        if (that.cond != null) {
            this.cond = that.cond;
        }
        if (that.step != null) {
            this.step = that.step;
        }
        if (that.statement != null) {
            this.statement = that.statement;
        }
    }
}
exports.UniFor = UniFor;
//# sourceMappingURL=UniFor.js.map