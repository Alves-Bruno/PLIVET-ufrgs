"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UniSwitchUnit = void 0;
const UniStatement_1 = require("./UniStatement");
const UniExpr_1 = require("./UniExpr");
class UniSwitchUnit extends UniStatement_1.UniStatement {
    constructor(label, cond, statement) {
        super();
        if (label === undefined && cond === undefined && statement === undefined) {
            this.label = null;
            this.cond = null;
            this.statement = [];
        }
        else if (label === undefined || cond === undefined || statement === undefined) {
            throw new Error('invalid arguments');
        }
        else {
            this.label = label;
            this.cond = cond;
            this.statement = statement;
        }
        this.fields.set('label', String);
        this.fields.set('cond', UniExpr_1.UniExpr);
        this.fields.set('statement', UniExpr_1.UniExpr);
    }
    toString() {
        return 'SwitchUnit(' + this.label + ')';
    }
    equals(obj) {
        if (obj == null || !(obj instanceof UniSwitchUnit))
            return false;
        const that = obj;
        return super.equals(that)
            && (this.label == null ? that.label == null : this.label === that.label)
            && (this.cond == null ? that.cond == null : this.cond.equals(that.cond))
            && (this.statement == null ? that.statement == null : this.statement.equals(that.statement));
    }
    merge(that) {
        super.merge(that);
        if (that.label != null) {
            this.label = that.label;
        }
        if (that.cond != null) {
            this.cond = that.cond;
        }
        if (that.statement != null) {
            if (this.statement == null) {
                this.statement = that.statement;
            }
            else {
                this.statement.push(...that.statement);
            }
        }
    }
}
exports.UniSwitchUnit = UniSwitchUnit;
//# sourceMappingURL=UniSwitchUnit.js.map