import { UniNode } from '../node/UniNode';
import { Engine } from './Engine/Engine';
import { ExecState } from './Engine/ExecState';
import { Mapper } from './mapper/Mapper';
import { SyntaxErrorData } from './mapper/SyntaxErrorData';
export declare abstract class Interpreter {
    protected readonly engine: Engine;
    protected readonly mapper: Mapper;
    constructor(engine: Engine, mapper: Mapper);
    setDebugMode(enable: boolean): void;
    getCurrentValue(): ExecState;
    getCurrentExpr(): UniNode;
    getCurrentState(): ExecState;
    getStdout(): string;
    stdin(text: string): void;
    getIsWaitingForStdin(): boolean;
    isStepExecutionRunning(): boolean;
    setFileList(filelist: Map<string, ArrayBuffer>): void;
    preProcess(code: string): string;
    startStepExecution(code: string): ExecState;
    stepExecute(): ExecState;
    execute(code: string): any;
    checkSyntaxError(code: string): SyntaxErrorData[];
}
