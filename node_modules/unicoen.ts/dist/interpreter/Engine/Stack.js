"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Stack = void 0;
const RuntimeException_1 = require("./RuntimeException");
const Variable_1 = require("./Variable");
class Stack {
    // 引数(variables)あり版も必要
    constructor(name, address) {
        this.name = name;
        this.address = address;
        this.variables = [];
    }
    addVariable(arg0, name, value, depth) {
        if (arg0 instanceof Variable_1.Variable) {
            this.variables.push(arg0);
            return;
        }
        else if (name === undefined || value === undefined || depth === undefined) {
            throw new RuntimeException_1.RuntimeException('args error');
        }
        const type = arg0;
        let lastAddress = this.address;
        if (this.variables.length !== 0) {
            const lastVar = this.variables[this.variables.length - 1];
            lastAddress = lastVar.address;
            lastAddress += lastVar.getByteSize();
        }
        const variable = new Variable_1.Variable(type, name, value, lastAddress, depth);
        this.variables.push(variable);
    }
    updateVariable(name, value) {
        for (let i = this.variables.length - 1; 0 <= i; --i) {
            const varInArray = this.variables[i]; // 内側のスコープから探すため逆順に探索
            if (varInArray.hasValue(name)) {
                varInArray.setValue(name, value);
                break;
            }
        }
    }
    removeVariables(depth) {
        this.variables = this.variables.filter((v, i) => {
            return !(depth <= v.depth);
        });
    }
    getVariables() {
        return this.variables;
    }
    getByteSize() {
        let sum = 0;
        for (const variable of this.variables) {
            sum += variable.getByteSize();
        }
        return sum;
    }
    toString() {
        return ('Stack [name=' +
            this.name +
            ', variables=' +
            this.variables +
            ', address=' +
            this.address +
            ']');
    }
}
exports.Stack = Stack;
//# sourceMappingURL=Stack.js.map