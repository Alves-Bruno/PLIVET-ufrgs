import { UniNode } from '../../node/UniNode';
import { UniVariableDec } from '../../node/UniVariableDec';
import { Scope } from './Scope';
import { Stack } from './Stack';
import { Variable } from './Variable';
export declare class ExecState {
    private currentValue;
    private currentExpr;
    private nextExpr;
    private stacks;
    private readonly stackOffset;
    private readonly global;
    constructor(global?: Scope);
    make(): ExecState;
    addVariable(stackName: string, variable: Variable): void;
    addVariable(stackName: string, decVar: UniVariableDec, value: any, depth: number): void;
    addStack(nameArg: string): string;
    popStack(): void;
    updateVariable(stackName: string, varName: string, value: any): void;
    removeVariables(stackName: string, depth: number): void;
    getCurrentValue(): any;
    setCurrenValue(value: any): void;
    getCurrentExpr(): UniNode;
    setCurrentExpr(expr: UniNode): void;
    getNextExpr(): UniNode;
    setNextExpr(expr: UniNode): void;
    getStacks(): Stack[];
    getByteSize(): number;
    getTypedef(type: string): string;
    private makeImple;
    private hasStack;
}
